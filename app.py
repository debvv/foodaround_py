import json
from flask import Flask, request, jsonify
from flask import Response
import psycopg2




app = Flask(__name__)

# –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —Å–ø—Ä–æ—Å–∞
@app.route('/predict_demand', methods=['POST'])
def predict_demand():
    data = request.json  # –ü–æ–ª—É—á–∞–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    # TODO: –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    return jsonify({"prediction": "–ü—Ä–∏–º–µ—Ä –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —Å–ø—Ä–æ—Å–∞"})



# –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
@app.route('/recommend', methods=['POST'])
def recommend():
    user_id = request.json.get("user_id")
    # TODO: –î–æ–±–∞–≤–∏—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    return jsonify({"recommendations": ["–†–µ—Å—Ç–æ—Ä–∞–Ω 1", "–†–µ—Å—Ç–æ—Ä–∞–Ω 2"]})



# –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ç–∑—ã–≤–æ–≤
@app.route('/analyze_reviews', methods=['POST'])
def analyze_reviews():
    review_text = request.json.get("review_text")
    # TODO: –î–æ–±–∞–≤–∏—Ç—å NLP-–º–æ–¥–µ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ç–∑—ã–≤–æ–≤
    return jsonify({"sentiment": "–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π"})



# –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
@app.route('/get_restaurants', methods=['GET'])
def get_restaurants():
    # TODO: –î–æ–±–∞–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏
    data = {"restaurants": ["–†–µ—Å—Ç–æ—Ä–∞–Ω A", "–†–µ—Å—Ç–æ—Ä–∞–Ω B"]}
    return Response(json.dumps(data, ensure_ascii=False), mimetype='application/json')


    #return jsonify({"restaurants": ["–†–µ—Å—Ç–æ—Ä–∞–Ω A", "–†–µ—Å—Ç–æ—Ä–∞–Ω B"]}), 200, {
    #        'Content-Type': 'application/json; charset=utf-8'}




# –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
@app.route('/update_data', methods=['POST'])
def update_data():
    # TODO: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä—Å–µ—Ä –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã
    return jsonify({"status": "–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"})



#–î–æ–±–∞–≤–ª—è–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ –æ –∫—É–ª–∏–Ω–∞—Ä–µ
@app.route('/add_chef_review', methods=['POST'])
def add_chef_review():
    data = request.json
    chef_name = data.get("chef_name")
    rating = data.get("rating")
    comment = data.get("comment")

    conn = psycopg2.connect(
        dbname="foodaround_db",
        user="postgres",
        password="–¢–í–û–ô_–ü–ê–†–û–õ–¨",
        host="localhost",
        port="5432"
    )
    cursor = conn.cursor()

    cursor.execute(
        "INSERT INTO chef_reviews (chef_name, rating, comment) VALUES (%s, %s, %s) RETURNING id;",
        (chef_name, rating, comment)
    )
    review_id = cursor.fetchone()[0]
    conn.commit()
    cursor.close()
    conn.close()

    return jsonify({"message": "–û—Ç–∑—ã–≤ –æ –∫—É–ª–∏–Ω–∞—Ä–µ –¥–æ–±–∞–≤–ª–µ–Ω!", "review_id": review_id})



# –î–æ–±–∞–≤–ª—è–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ –æ –∫—É–ª–∏–Ω–∞—Ä–∞—Ö
@app.route('/get_chef_reviews', methods=['GET'])
def get_chef_reviews():
    conn = psycopg2.connect(
        dbname="foodaround_db",
        user="postgres",
        password="–¢–í–û–ô_–ü–ê–†–û–õ–¨",
        host="localhost",
        port="5432"
    )
    cursor = conn.cursor()

    cursor.execute("SELECT id, chef_name, rating, comment FROM chef_reviews;")
    reviews = cursor.fetchall()
    cursor.close()
    conn.close()

    return jsonify({"chef_reviews": reviews})


# testing curl -X POST http://127.0.0.1:5000/add_chef_review -H "Content-Type: application/json" -d '{"chef_name": "–ì–æ—Ä–¥–æ–Ω –†–∞–º–∑–∏", "rating": 5, "comment": "–û—Ç–ª–∏—á–Ω—ã–π –ø–æ–≤–∞—Ä!"}'



# –î–æ–±–∞–≤–ª—è–µ–º API –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∫—Ä–∞–ø–Ω—É—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 # üìå –î–æ–±–∞–≤–ª—è–µ–º –≤ app.py —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ —Å–∫—Ä–∞–ø–∏–Ω–≥–∞
@app.route('/add_scraped_review', methods=['POST'])
def add_scraped_review():
    data = request.json
    restaurant_name = data.get("restaurant_name")
    source = data.get("source")  # –ù–∞–ø—Ä–∏–º–µ—Ä, "TripAdvisor", "Google Reviews"
    rating = data.get("rating")
    review_text = data.get("review_text")
    review_date = data.get("review_date")

    conn = psycopg2.connect(
        dbname="foodaround_db",
        user="postgres",
        password="–¢–í–û–ô_–ü–ê–†–û–õ–¨",
        host="localhost",
        port="5432"
    )
    cursor = conn.cursor()

    cursor.execute(
        "INSERT INTO scraped_reviews (restaurant_name, source, rating, review_text, review_date) VALUES (%s, %s, %s, %s, %s) RETURNING id;",
        (restaurant_name, source, rating, review_text, review_date)
    )
    review_id = cursor.fetchone()[0]
    conn.commit()
    cursor.close()
    conn.close()

    return jsonify({"message": "–°–∫—Ä–∞–ø–Ω—É—Ç—ã–π –æ—Ç–∑—ã–≤ –¥–æ–±–∞–≤–ª–µ–Ω!", "review_id": review_id})


# üìå –î–æ–±–∞–≤–ª—è–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ scraped_reviews
@app.route('/get_scraped_reviews', methods=['GET'])
def get_scraped_reviews():
    conn = psycopg2.connect(
        dbname="foodaround_db",
        user="postgres",
        password="–¢–í–û–ô_–ü–ê–†–û–õ–¨",
        host="localhost",
        port="5432"
    )
    cursor = conn.cursor()

    cursor.execute("SELECT id, restaurant_name, source, rating, review_text, review_date FROM scraped_reviews;")
    reviews = cursor.fetchall()
    cursor.close()
    conn.close()

    return jsonify({"scraped_reviews": reviews})


# –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä–∞–ø–Ω—É—Ç—ã–π –æ—Ç–∑—ã–≤ —á–µ—Ä–µ–∑ Postman –∏–ª–∏ curl
# curl -X POST http://127.0.0.1:5000/add_scraped_review -H "Content-Type: application/json" -d '{"restaurant_name": "La Placinte", "source": "TripAdvisor", "rating": 4.5, "review_text": "–û—Ç–ª–∏—á–Ω–∞—è –µ–¥–∞!", "review_date": "2025-03-08"}'

if __name__ == '__main__':
    app.run(debug=True)
